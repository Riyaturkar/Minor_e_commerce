package java;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.Random;

import com.riya.connection.DatabaseConnection;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import jakarta.servlet.http.HttpSession;
import jakarta.servlet.http.Part;

@WebServlet("/AddProducts")
public class AddProducts extends HttpServlet {

    // Path where all the images are stored
    private final String UPLOAD_DIRECTORY = "C:\\Users\\NARENDER KESWANI\\Documents\\NetBeansProjects\\OnlineShoppingSystem\\web\\uploads";

    @Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
            throws ServletException, IOException {

        // Creating session
        HttpSession session = request.getSession();

        // Get all parts from the request
        List<Part> parts = (List<Part>) request.getParts();

        String imageName = null;
        String productName = null;
        String productQuantity = null;
        String productPrice = null;
        String descrip = null;
        String mrpPrice = null;
        String status = null;
        String category = null;

        // SALTCHARS to generate unique code for product
        String SALTCHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
        StringBuilder salt = new StringBuilder();
        Random rnd = new Random();
        while (salt.length() < 3) { // length of the random string
            int index = (int) (rnd.nextFloat() * SALTCHARS.length());
            salt.append(SALTCHARS.charAt(index));
        }
        String code = salt.toString();

        for (Part part : parts) {
            if (part.getContentType() != null && part.getContentType().startsWith("image/")) {
                // Get the file name
                imageName = getFileName(part);
                // Write the file to the upload directory
                part.write(UPLOAD_DIRECTORY + File.separator + imageName);
            } else {
                // Get the field name and value
                String fieldName = part.getName();
                String fieldValue = request.getParameter(fieldName);

                switch (fieldName) {
                    case "name":
                        productName = fieldValue;
                        break;
                    case "price":
                        productPrice = fieldValue;
                        break;
                    case "description":
                        descrip = fieldValue;
                        break;
                    case "mrp_price":
                        mrpPrice = fieldValue;
                        break;
                    case "status":
                        status = fieldValue;
                        break;
                    case "category":
                        category = fieldValue;
                        break;
                }
            }
        }

        try {
            int id = 0; // Assuming id is auto-generated by the database
            String imagePath = UPLOAD_DIRECTORY + File.separator + imageName;
            // Querying to insert product in the table
            int i = DatabaseConnection.insertUpdateFromSqlQuery(
                "INSERT INTO tblproduct(id, active, code, description, image, image_name, name, price, mrp_price, product_category) " +
                "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)",
                id, status, code, descrip, imagePath, imageName, productName, productPrice, mrpPrice, category
            );

            // If product inserted successfully in the database
            if (i > 0) {
                String success = "Product added successfully.";
                // Adding method in session
                session.setAttribute("message", success);
                // Response sent to the admin-add-product.jsp
                response.sendRedirect("admin-add-product.jsp");
            } else {
                // Handling the case where insertion fails
                request.setAttribute("message", "Failed to add the product.");
                request.getRequestDispatcher("error.jsp").forward(request, response);
            }
        } catch (Exception e) {
            e.printStackTrace();
            // Handling database errors
            request.setAttribute("message", "Database error: " + e.getMessage());
            request.getRequestDispatcher("error.jsp").forward(request, response);
        }
    }

    private String getFileName(Part part) {
        String header = part.getHeader("Content-Disposition");
        String fileName = header.substring(header.indexOf("filename=\"") + 10, header.indexOf("\"", header.indexOf("filename=\"") + 10));
        return fileName;
    }
}

